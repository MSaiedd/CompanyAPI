// <auto-generated />
using CompanyEvaluationsAPI.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyEvaluationsAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CompanyEvaluationsAPI.Infrastructure.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Name = "Mohamed"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 1,
                            Name = "Saied"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 2,
                            Name = "Hassan"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 2,
                            Name = "aly"
                        });
                });

            modelBuilder.Entity("CompanyEvaluationsAPI.Infrastructure.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RateeId")
                        .HasColumnType("int");

                    b.Property<int>("RaterId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RateeId");

                    b.HasIndex("RaterId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("CompanyEvaluationsAPI.Infrastructure_Layer.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Development"
                        });
                });

            modelBuilder.Entity("CompanyEvaluationsAPI.Infrastructure.Models.Employee", b =>
                {
                    b.HasOne("CompanyEvaluationsAPI.Infrastructure_Layer.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CompanyEvaluationsAPI.Infrastructure.Models.Rating", b =>
                {
                    b.HasOne("CompanyEvaluationsAPI.Infrastructure.Models.Employee", "Ratee")
                        .WithMany("ReceivedRatings")
                        .HasForeignKey("RateeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CompanyEvaluationsAPI.Infrastructure.Models.Employee", "Rater")
                        .WithMany("GivenRatings")
                        .HasForeignKey("RaterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ratee");

                    b.Navigation("Rater");
                });

            modelBuilder.Entity("CompanyEvaluationsAPI.Infrastructure.Models.Employee", b =>
                {
                    b.Navigation("GivenRatings");

                    b.Navigation("ReceivedRatings");
                });

            modelBuilder.Entity("CompanyEvaluationsAPI.Infrastructure_Layer.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
